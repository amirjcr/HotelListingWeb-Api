// <auto-generated />
using HotelListiing.EndPoint.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelListing.EndPoint.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210813134419_SeedingData1")]
    partial class SeedingData1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HotelListing.EndPoint.Data.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("Countrycode")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("colunries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Countrycode = (short)98,
                            Name = "IRAN",
                            ShortName = "IR"
                        },
                        new
                        {
                            Id = 2,
                            Countrycode = (short)3,
                            Name = "UNITED KINGDOM",
                            ShortName = "UK"
                        },
                        new
                        {
                            Id = 3,
                            Countrycode = (short)7,
                            Name = "RUSSIA",
                            ShortName = "RU"
                        },
                        new
                        {
                            Id = 4,
                            Countrycode = (short)11,
                            Name = "UNITED EMART ARIBA",
                            ShortName = "UEA"
                        });
                });

            modelBuilder.Entity("HotelListing.EndPoint.Data.Entities.Hotel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = "bd2a578f-ac27-4c12-86c7-d72a51f83bca",
                            Address = "dubai",
                            CountryId = 4,
                            Name = "Big Hotel",
                            Rating = 4.7999999999999998
                        },
                        new
                        {
                            Id = "ff4c66e3-c0a8-4a78-830e-d16da6380608",
                            Address = "Lodon",
                            CountryId = 2,
                            Name = "Uk Hotel",
                            Rating = 4.0
                        },
                        new
                        {
                            Id = "fb830bcf-68f0-4142-a3f1-b1a562d1f3dd",
                            Address = "Moskow",
                            CountryId = 3,
                            Name = "Russia Plus",
                            Rating = 5.0
                        },
                        new
                        {
                            Id = "647f924e-48c5-4b34-8fb0-e168a47f002e",
                            Address = "Tehran Satadat Abad",
                            CountryId = 1,
                            Name = "Espinas plas",
                            Rating = 4.3499999999999996
                        });
                });

            modelBuilder.Entity("HotelListing.EndPoint.Data.Entities.Hotel", b =>
                {
                    b.HasOne("HotelListing.EndPoint.Data.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
